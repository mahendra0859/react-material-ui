{"version":3,"sources":["components/SideMenu/index.js","components/Header/index.js","components/PageHeader/index.js","components/useForm/index.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/CheckBox.js","components/controls/DatePicker.js","components/controls/Button.js","components/controls/Controls.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/useTable/index.js","pages/Employees/Employees.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","SideMenu","classes","className","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","btnRoot","label","btnLabel","Badge","badgeContent","color","useStyle","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","props","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","Input","name","value","onChange","error","other","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","id","control","Radio","Select","options","InputLabel","MenuItem","option","FormHelperText","CheckBox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","textTransform","Controls","Button","text","size","onClick","KEYS","getAllEmployees","localStorage","getItem","setItem","JSON","stringify","employess","parse","departments","employee","department","departmentId","Date","table","marginTop","fontWeight","palette","primary","main","light","cursor","useTable","records","headCells","filterFn","pages","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","descendingComparator","a","b","TblContainer","children","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabalizedThis","ele","index","sort","stableSort","fn","getComparator","slice","pageContent","searchinput","Employees","EmployeeService","setRecords","setFilterFn","clear","fullName","email","mobile","city","gender","hireDate","isPermanent","InputProps","InputAdornment","filter","x","toLowerCase","includes","TableBody","createMuiTheme","secondary","background","default","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","appMain","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2da82bd.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  sideMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    left: '0px',\n    width: '320px',\n    height: '100%',\n    backgroundColor: '#253053',\n  },\n});\n\nconst SideMenu = () => {\n  const classes = useStyles();\n  return <div className={classes.sideMenu}>SideMenu</div>;\n};\n\nexport default SideMenu;\n","import {\n  AppBar,\n  Toolbar,\n  Grid,\n  InputBase,\n  IconButton,\n  Badge,\n  makeStyles,\n} from '@material-ui/core';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: { backgroundColor: '#fff' },\n  searchInput: {\n    opacity: '0.6',\n    padding: `0px ${theme.spacing(1)}px`,\n    fontSize: '0.8rem',\n    '&:hover': {\n      backgroundColor: '#f2f2f2',\n    },\n    '& .MuiSvgIcon-root': {\n      // theme.spacing(1) === '8px'\n      // marginRight: '8px',\n      marginRight: theme.spacing(1),\n    },\n  },\n  // other method to override styles\n  // btnRoot: {\n  //   backgroundColor: 'green',\n  // },\n  // btnLabel: {\n  //   backgroundColor: 'red',\n  // },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position='static' className={classes.root}>\n      <Toolbar>\n        <Grid container alignItems='center'>\n          <Grid item>\n            <InputBase\n              placeholder='Search topics'\n              className={classes.searchInput}\n              startAdornment={<SearchIcon fontSize='small' />}\n            />\n          </Grid>\n          <Grid item sm></Grid>\n          <Grid item>\n            {/* other method to override styles */}\n            {/* <IconButton\n              classes={{ root: classes.btnRoot, label: classes.btnLabel }}\n            > */}\n            <IconButton\n              classes={{ root: classes.btnRoot, label: classes.btnLabel }}\n            >\n              <Badge badgeContent={4} color='secondary'>\n                <NotificationsNoneIcon fontSize='small' />\n              </Badge>\n            </IconButton>\n            <IconButton>\n              <Badge badgeContent={4} color='primary'>\n                <ChatBubbleOutlineIcon fontSize='small' />\n              </Badge>\n            </IconButton>\n            <IconButton>\n              <PowerSettingsNewIcon fontSize='small' />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { Card, makeStyles, Paper, Typography } from '@material-ui/core';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    backgroundColor: '#fdfdff',\n  },\n  pageHeader: {\n    padding: theme.spacing(4),\n    display: 'flex ',\n    marginBottom: theme.spacing(2),\n  },\n  pageIcon: {\n    display: 'inline-block',\n    padding: theme.spacing(2),\n    color: '#3c44b1',\n  },\n  pageTitle: {\n    paddingLeft: theme.spacing(4),\n    '& .MuiTypography-subtitle2': {\n      opacity: '0.6',\n    },\n  },\n}));\n\nconst PageHeader = (props) => {\n  const classes = useStyle();\n  const { title, subTitle, icon } = props;\n  return (\n    <Paper elevation={0} square className={classes.root}>\n      <div className={classes.pageHeader}>\n        <Card className={classes.pageIcon}>{icon}</Card>\n        <div className={classes.pageTitle}>\n          <Typography variant='h6' component='div'>\n            {title}\n          </Typography>\n          <Typography variant='subtitle2' component='div'>\n            {subTitle}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default PageHeader;\n","import { makeStyles } from '@material-ui/core';\nimport { useState } from 'react';\n\nexport const useForm = (\n  initialFormValue,\n  validateOnChange = false,\n  validate\n) => {\n  const [values, setValues] = useState(initialFormValue);\n  const [errors, setErrors] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n    if (validateOnChange) {\n      validate({ [name]: value });\n    }\n  };\n\n  const resetForm = () => {\n    setValues(initialFormValue);\n    setErrors({});\n  };\n\n  return { values, setValues, handleInputChange, errors, setErrors, resetForm };\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport const Form = ({ children, ...other }) => {\n  const classes = useStyles();\n  return (\n    <form className={classes.root} autoComplete='off' {...other}>\n      {children}\n    </form>\n  );\n};\n","import { TextField } from '@material-ui/core';\n\nconst Input = ({ name, label, value, onChange, error = null, ...other }) => {\n  return (\n    <TextField\n      name={name}\n      variant='outlined'\n      label={label}\n      value={value}\n      onChange={onChange}\n      {...other}\n      {...(error && { error: true, helperText: error })}\n    />\n  );\n};\n\nexport default Input;\n","import {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup as MuiRadioGroup,\n} from '@material-ui/core';\n\nconst RadioGroup = ({ label, name, value, onChange, items }) => {\n  return (\n    <FormControl>\n      <FormLabel>{label}</FormLabel>\n      <MuiRadioGroup row name={name} value={value} onChange={onChange}>\n        {items.map((item) => (\n          <FormControlLabel\n            key={item.id}\n            value={item.id}\n            control={<Radio />}\n            label={item.title}\n          />\n        ))}\n      </MuiRadioGroup>\n    </FormControl>\n  );\n};\n\nexport default RadioGroup;\n","import {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select as MuiSelect,\n} from '@material-ui/core';\n\nconst Select = ({ name, label, value, onChange, options, error = null }) => {\n  return (\n    <FormControl variant='outlined' {...(error && { error: true })}>\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect label={label} name={name} value={value} onChange={onChange}>\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {options.map((option) => (\n          <MenuItem key={option.id} value={option.id}>\n            {option.title}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n      {error && <FormHelperText>{error}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nexport default Select;\n","import {\n  FormControl,\n  FormControlLabel,\n  Checkbox as MuiCheckbox,\n} from '@material-ui/core';\n\nconst CheckBox = ({ name, label, value, onChange }) => {\n  const convertToDefEventPara = (name, value) => ({\n    target: {\n      name,\n      value,\n    },\n  });\n  return (\n    <FormControl>\n      <FormControlLabel\n        control={\n          <MuiCheckbox\n            checked={value}\n            onChange={(e) =>\n              onChange(convertToDefEventPara(name, e.target.checked))\n            }\n            name={name}\n            color='primary'\n          />\n        }\n        label={label}\n      ></FormControlLabel>\n    </FormControl>\n  );\n};\n\nexport default CheckBox;\n","import DateFnsUtils from '@date-io/date-fns';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nconst DatePicker = ({ name, label, value, onChange }) => {\n  const convertToDefEventPara = (name, value) => ({\n    target: {\n      name,\n      value,\n    },\n  });\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        disableToolbar\n        variant='inline'\n        inputVariant='outlined'\n        format='MM/dd/yyyy'\n        name={name}\n        value={value}\n        onChange={(date) => onChange(convertToDefEventPara(name, date))}\n      ></KeyboardDatePicker>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default DatePicker;\n","import { Button as MuiButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(0.5),\n  },\n  label: {\n    textTransform: 'none',\n  },\n}));\n\nconst Button = ({ text, size, color, variant, onClick, ...other }) => {\n  const classes = useStyles();\n  return (\n    <MuiButton\n      variant={variant || 'contained'}\n      color={color || 'primary'}\n      size={size || 'large'}\n      onClick={onClick}\n      {...other}\n      classes={{ root: classes.root, label: classes.label }}\n    >\n      {text}\n    </MuiButton>\n  );\n};\n\nexport default Button;\n","import Input from './Input';\nimport RadioGroup from './RadioGroup';\nimport Select from './Select';\nimport CheckBox from './CheckBox';\nimport DatePicker from './DatePicker';\nimport Button from './Button';\n\nconst Controls = { Input, RadioGroup, Select, CheckBox, DatePicker, Button };\n\nexport default Controls;\n","const KEYS = {\n  employees: 'employees',\n  employeeId: 'employeeId',\n};\nexport const getGenderItems = [\n  { id: 'male', title: 'Male' },\n  { id: 'female', title: 'Female' },\n  { id: 'other', title: 'Other' },\n];\nexport const getDepartmentCollecton = () => [\n  { id: '1', title: 'Development' },\n  { id: '2', title: 'Marketing' },\n  { id: '3', title: 'Accounting' },\n  { id: '4', title: 'HR' },\n];\n\nexport const generateEmployeeId = () => {\n  if (localStorage.getItem(KEYS.employeeId) == null) {\n    localStorage.setItem(KEYS.employeeId, '0');\n  }\n  let id = parseInt(localStorage.getItem(KEYS.employeeId));\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\n  return id;\n};\n\nexport const insertEmployee = (data) => {\n  let employess = getAllEmployees();\n  data.id = generateEmployeeId();\n  employess.push(data);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employess));\n};\n\nexport const getAllEmployees = () => {\n  if (localStorage.getItem(KEYS.employees) == null) {\n    localStorage.setItem(KEYS.employees, JSON.stringify([]));\n  }\n  let employess = JSON.parse(localStorage.getItem(KEYS.employees));\n  let departments = getDepartmentCollecton();\n  return employess.map((employee) => ({\n    ...employee,\n    department: departments[employee.departmentId - 1].title,\n  }));\n};\n","import { Grid } from '@material-ui/core';\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from '../../services/employeeService';\n\nconst initialFormValue = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false,\n};\n\nconst EmployeeForm = () => {\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('fullName' in fieldValues) {\n      temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    }\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n        ? ''\n        : 'Email is not valid.';\n    }\n    if ('mobile' in fieldValues) {\n      temp.mobile =\n        fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    }\n    if ('departmentId' in fieldValues) {\n      temp.departmentId = fieldValues.departmentId.length\n        ? ''\n        : 'This field is required.';\n    }\n\n    setErrors({\n      ...temp,\n    });\n    if (fieldValues === values) {\n      return Object.values(temp).every((x) => x === '');\n    }\n  };\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initialFormValue,\n    true,\n    validate\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name='fullName'\n            variant='outlined'\n            label='Full Name'\n            value={values.fullName}\n            onChange={handleInputChange}\n            error={errors.fullName}\n          />\n          <Controls.Input\n            name='email'\n            variant='outlined'\n            label='Email'\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n          <Controls.Input\n            name='mobile'\n            variant='outlined'\n            label='Mobile'\n            value={values.mobile}\n            onChange={handleInputChange}\n            error={errors.mobile}\n          />\n          <Controls.Input\n            name='city'\n            variant='outlined'\n            label='City'\n            value={values.city}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.RadioGroup\n            label='Gender'\n            name='gender'\n            value={values.gender}\n            onChange={handleInputChange}\n            items={employeeService.getGenderItems}\n          />\n          <Controls.Select\n            name='departmentId'\n            label='Department'\n            value={values.departmentId}\n            onChange={handleInputChange}\n            options={employeeService.getDepartmentCollecton()}\n            error={errors.departmentId}\n          />\n          <Controls.DatePicker\n            name='hireDate'\n            label='Hire Date'\n            value={values.hireDate}\n            onChange={handleInputChange}\n          />\n          <Controls.CheckBox\n            name='isPermanent'\n            label='Permanent Employee'\n            value={values.isPermanent}\n            onChange={handleInputChange}\n          />\n          <div>\n            <Controls.Button text='Submit' type='submit' />\n            <Controls.Button text='Reset' color='default' onClick={resetForm} />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default EmployeeForm;\n","import {\n  makeStyles,\n  Table,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n} from '@material-ui/core';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    marginTop: theme.spacing(3),\n    '& thead th': {\n      fontWeight: '600',\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.primary.light,\n    },\n    '& tbody td': {\n      fontWeight: '300',\n    },\n    '& tbody tr:hover': {\n      backgroundColor: '#fffbf2',\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst useTable = (records, headCells, filterFn) => {\n  const classes = useStyles();\n  const pages = [5, 10, 25];\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\n  const [order, setOrder] = useState();\n  const [orderBy, setOrderBy] = useState();\n\n  const TblContainer = ({ children }) => (\n    <Table className={classes.table}>{children}</Table>\n  );\n\n  const TblHead = () => {\n    const handleSortRequest = (cellId) => {\n      const isAsc = orderBy === cellId && order === 'asc';\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(cellId);\n    };\n    return (\n      <TableHead>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              {headCell.disableSorting ? (\n                headCell.label\n              ) : (\n                <TableSortLabel\n                  active={orderBy === headCell.id}\n                  direction={orderBy === headCell.id ? order : 'asc'}\n                  onClick={() => handleSortRequest(headCell.id)}\n                >\n                  {headCell.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const TblPagination = () => (\n    <TablePagination\n      component='div'\n      rowsPerPageOptions={pages}\n      count={records.length}\n      rowsPerPage={rowsPerPage}\n      page={page}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={handleChangeRowsPerPage}\n    />\n  );\n\n  const stableSort = (array, comparator) => {\n    const stabalizedThis = array.map((ele, index) => [ele, index]);\n    stabalizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabalizedThis.map((ele) => ele[0]);\n  };\n\n  const getComparator = (order, orderBy) => {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  };\n\n  const descendingComparator = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const recordsAfterPagingAndSorting = () => {\n    return stableSort(\n      filterFn.fn(records),\n      getComparator(order, orderBy)\n    ).slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n  };\n\n  return { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting };\n};\n\nexport default useTable;\n","import { PageHeader } from '../../components';\nimport EmployeeForm from './EmployeeForm';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport {\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TableBody,\n  TableCell,\n  TableRow,\n  Toolbar,\n} from '@material-ui/core';\nimport useTable from '../../components/useTable';\nimport * as EmployeeService from '../../services/employeeService';\nimport { useState } from 'react';\nimport Controls from '../../components/controls/Controls';\nimport { Search } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n  },\n  searchinput: {\n    width: '75%',\n  },\n}));\n\nconst headCells = [\n  { id: 'fullName', label: 'Employee Name' },\n  { id: 'email', label: 'Email Address (Personal)' },\n  { id: 'mobile', label: 'Mobile Number' },\n  { id: 'department', label: 'Department', disableSorting: true },\n];\n\nconst Employees = () => {\n  const classes = useStyles();\n  const [records, setRecords] = useState(EmployeeService.getAllEmployees());\n  const [filterFn, setFilterFn] = useState({ fn: (items) => items });\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting,\n  } = useTable(records, headCells, filterFn);\n\n  useState(() => {\n    localStorage.clear();\n    localStorage.setItem('employeeId', '6');\n    localStorage.setItem(\n      'employees',\n      JSON.stringify([\n        {\n          id: 1,\n          fullName: 'Mahendra AR',\n          email: 'mahendra@bellabona.com',\n          mobile: '8105693159',\n          city: 'Bengaluru',\n          gender: 'male',\n          departmentId: '1',\n          hireDate: '2020-11-20T01:31:09.992Z',\n          isPermanent: true,\n        },\n        {\n          id: 2,\n          fullName: 'Raj',\n          email: 'raj@bellabona.com',\n          mobile: '1234567890',\n          city: 'Mumbai',\n          gender: 'male',\n          departmentId: '1',\n          hireDate: '2020-11-20T01:31:09.992Z',\n          isPermanent: true,\n        },\n        {\n          id: 3,\n          fullName: 'Rineesh',\n          email: 'rinessh@bellabona.com',\n          mobile: '1234567890',\n          city: 'Kochi',\n          gender: 'male',\n          departmentId: '1',\n          hireDate: '2020-11-20T01:31:09.992Z',\n          isPermanent: true,\n        },\n        {\n          id: 4,\n          fullName: 'Gaurav',\n          email: 'gaurav@bellabona.com',\n          mobile: '1234567890',\n          city: 'Bengaluru',\n          gender: 'male',\n          departmentId: '1',\n          hireDate: '2020-11-20T01:31:09.992Z',\n          isPermanent: true,\n        },\n        {\n          id: 5,\n          fullName: 'Mehul',\n          email: 'mehul@bellabona.com',\n          mobile: '1234567890',\n          city: 'Mumbai',\n          gender: 'male',\n          departmentId: '1',\n          hireDate: '2020-11-20T01:31:09.992Z',\n          isPermanent: true,\n        },\n        {\n          id: 6,\n          fullName: 'Tushar',\n          email: 'tushar@bellabona.com',\n          mobile: '1234567890',\n          city: 'Kochi',\n          gender: 'male',\n          departmentId: '1',\n          hireDate: '2020-11-20T01:31:09.992Z',\n          isPermanent: true,\n        },\n      ])\n    );\n    setRecords(EmployeeService.getAllEmployees());\n  }, []);\n\n  const handleSearch = (e) => {\n    let target = e.target;\n    setFilterFn({\n      fn: (items) => {\n        if (target.value === '') {\n          return items;\n        } else {\n          return items.filter((x) =>\n            x.fullName.toLowerCase().includes(target.value)\n          );\n        }\n      },\n    });\n  };\n\n  return (\n    <>\n      <PageHeader\n        title='New Employee'\n        subTitle='Form design wth validation'\n        icon={<PeopleOutlineIcon fontSize='large' />}\n      />\n      <Paper className={classes.pageContent}>\n        {/* <EmployeeForm /> */}\n        <Toolbar>\n          <Controls.Input\n            className={classes.searchinput}\n            label='Search Employees'\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <Search />\n                </InputAdornment>\n              ),\n            }}\n            onChange={handleSearch}\n          />\n        </Toolbar>\n        <TblContainer>\n          <TblHead />\n          <TableBody>\n            {recordsAfterPagingAndSorting().map((item) => (\n              <TableRow key={item.id}>\n                <TableCell>{item.fullName}</TableCell>\n                <TableCell>{item.email}</TableCell>\n                <TableCell>{item.mobile}</TableCell>\n                <TableCell>{item.department}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </TblContainer>\n        <TblPagination />\n      </Paper>\n    </>\n  );\n};\n\nexport default Employees;\n","import {\n  createMuiTheme,\n  CssBaseline,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core';\nimport './App.css';\nimport { SideMenu, Header } from './components';\nimport Employees from './pages/Employees/Employees';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#333996',\n      light: '#3c44b126',\n    },\n    secondary: {\n      main: '#f83245',\n      light: '#f8324526',\n    },\n    background: {\n      default: '#f4f5fd',\n    },\n  },\n  // shape: {\n  //   borderRadius: '12px',\n  // },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        transform: 'translateZ(0)',\n      },\n    },\n  },\n  props: {\n    MuiIconButton: {\n      disableRipple: true,\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '320px',\n    width: '100%',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n\n        <Employees />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}