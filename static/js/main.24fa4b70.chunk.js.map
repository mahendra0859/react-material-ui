{"version":3,"sources":["components/SideMenu/index.js","components/Header/index.js","components/PageHeader/index.js","components/useForm/index.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/CheckBox.js","components/controls/DatePicker.js","components/controls/Button.js","components/controls/Controls.js","services/employeeService.js","pages/Employees/EmployeeForm.js","pages/Employees/Employees.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","SideMenu","classes","className","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","btnRoot","label","btnLabel","Badge","badgeContent","color","useStyle","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","props","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","Form","children","other","autoComplete","Input","name","value","onChange","error","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","id","control","Radio","Select","options","InputLabel","MenuItem","option","FormHelperText","CheckBox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","textTransform","Controls","Button","text","size","onClick","KEYS","getGenderItems","insertEmployee","data","employess","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","initialFormValue","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","onSubmit","preventDefault","employeeService","xs","type","pageContent","Employees","createMuiTheme","palette","primary","main","light","secondary","background","default","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","appMain","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24fa4b70.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  sideMenu: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'absolute',\n    left: '0px',\n    width: '320px',\n    height: '100%',\n    backgroundColor: '#253053',\n  },\n});\n\nconst SideMenu = () => {\n  const classes = useStyles();\n  return <div className={classes.sideMenu}>SideMenu</div>;\n};\n\nexport default SideMenu;\n","import {\n  AppBar,\n  Toolbar,\n  Grid,\n  InputBase,\n  IconButton,\n  Badge,\n  makeStyles,\n} from '@material-ui/core';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: { backgroundColor: '#fff' },\n  searchInput: {\n    opacity: '0.6',\n    padding: `0px ${theme.spacing(1)}px`,\n    fontSize: '0.8rem',\n    '&:hover': {\n      backgroundColor: '#f2f2f2',\n    },\n    '& .MuiSvgIcon-root': {\n      // theme.spacing(1) === '8px'\n      // marginRight: '8px',\n      marginRight: theme.spacing(1),\n    },\n  },\n  // other method to override styles\n  // btnRoot: {\n  //   backgroundColor: 'green',\n  // },\n  // btnLabel: {\n  //   backgroundColor: 'red',\n  // },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position='static' className={classes.root}>\n      <Toolbar>\n        <Grid container alignItems='center'>\n          <Grid item>\n            <InputBase\n              placeholder='Search topics'\n              className={classes.searchInput}\n              startAdornment={<SearchIcon fontSize='small' />}\n            />\n          </Grid>\n          <Grid item sm></Grid>\n          <Grid item>\n            {/* other method to override styles */}\n            {/* <IconButton\n              classes={{ root: classes.btnRoot, label: classes.btnLabel }}\n            > */}\n            <IconButton\n              classes={{ root: classes.btnRoot, label: classes.btnLabel }}\n            >\n              <Badge badgeContent={4} color='secondary'>\n                <NotificationsNoneIcon fontSize='small' />\n              </Badge>\n            </IconButton>\n            <IconButton>\n              <Badge badgeContent={4} color='primary'>\n                <ChatBubbleOutlineIcon fontSize='small' />\n              </Badge>\n            </IconButton>\n            <IconButton>\n              <PowerSettingsNewIcon fontSize='small' />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { Card, makeStyles, Paper, Typography } from '@material-ui/core';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    backgroundColor: '#fdfdff',\n  },\n  pageHeader: {\n    padding: theme.spacing(4),\n    display: 'flex ',\n    marginBottom: theme.spacing(2),\n  },\n  pageIcon: {\n    display: 'inline-block',\n    padding: theme.spacing(2),\n    color: '#3c44b1',\n  },\n  pageTitle: {\n    paddingLeft: theme.spacing(4),\n    '& .MuiTypography-subtitle2': {\n      opacity: '0.6',\n    },\n  },\n}));\n\nconst PageHeader = (props) => {\n  const classes = useStyle();\n  const { title, subTitle, icon } = props;\n  return (\n    <Paper elevation={0} square className={classes.root}>\n      <div className={classes.pageHeader}>\n        <Card className={classes.pageIcon}>{icon}</Card>\n        <div className={classes.pageTitle}>\n          <Typography variant='h6' component='div'>\n            {title}\n          </Typography>\n          <Typography variant='subtitle2' component='div'>\n            {subTitle}\n          </Typography>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default PageHeader;\n","import { makeStyles } from '@material-ui/core';\nimport { useState } from 'react';\n\nexport const useForm = (\n  initialFormValue,\n  validateOnChange = false,\n  validate\n) => {\n  const [values, setValues] = useState(initialFormValue);\n  const [errors, setErrors] = useState([]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n    if (validateOnChange) {\n      validate({ [name]: value });\n    }\n  };\n\n  const resetForm = () => {\n    setValues(initialFormValue);\n    setErrors({});\n  };\n\n  return { values, setValues, handleInputChange, errors, setErrors, resetForm };\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport const Form = ({ children, ...other }) => {\n  const classes = useStyles();\n  return (\n    <form className={classes.root} autoComplete='off' {...other}>\n      {children}\n    </form>\n  );\n};\n","import { TextField } from '@material-ui/core';\n\nconst Input = ({ name, label, value, onChange, error = null }) => {\n  return (\n    <TextField\n      name={name}\n      variant='outlined'\n      label={label}\n      value={value}\n      onChange={onChange}\n      {...(error && { error: true, helperText: error })}\n    />\n  );\n};\n\nexport default Input;\n","import {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup as MuiRadioGroup,\n} from '@material-ui/core';\n\nconst RadioGroup = ({ label, name, value, onChange, items }) => {\n  return (\n    <FormControl>\n      <FormLabel>{label}</FormLabel>\n      <MuiRadioGroup row name={name} value={value} onChange={onChange}>\n        {items.map((item) => (\n          <FormControlLabel\n            key={item.id}\n            value={item.id}\n            control={<Radio />}\n            label={item.title}\n          />\n        ))}\n      </MuiRadioGroup>\n    </FormControl>\n  );\n};\n\nexport default RadioGroup;\n","import {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select as MuiSelect,\n} from '@material-ui/core';\n\nconst Select = ({ name, label, value, onChange, options, error = null }) => {\n  return (\n    <FormControl variant='outlined' {...(error && { error: true })}>\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect label={label} name={name} value={value} onChange={onChange}>\n        <MenuItem value=''>\n          <em>None</em>\n        </MenuItem>\n        {options.map((option) => (\n          <MenuItem key={option.id} value={option.id}>\n            {option.title}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n      {error && <FormHelperText>{error}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nexport default Select;\n","import {\n  FormControl,\n  FormControlLabel,\n  Checkbox as MuiCheckbox,\n} from '@material-ui/core';\n\nconst CheckBox = ({ name, label, value, onChange }) => {\n  const convertToDefEventPara = (name, value) => ({\n    target: {\n      name,\n      value,\n    },\n  });\n  return (\n    <FormControl>\n      <FormControlLabel\n        control={\n          <MuiCheckbox\n            checked={value}\n            onChange={(e) =>\n              onChange(convertToDefEventPara(name, e.target.checked))\n            }\n            name={name}\n            color='primary'\n          />\n        }\n        label={label}\n      ></FormControlLabel>\n    </FormControl>\n  );\n};\n\nexport default CheckBox;\n","import DateFnsUtils from '@date-io/date-fns';\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nconst DatePicker = ({ name, label, value, onChange }) => {\n  const convertToDefEventPara = (name, value) => ({\n    target: {\n      name,\n      value,\n    },\n  });\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        disableToolbar\n        variant='inline'\n        inputVariant='outlined'\n        format='MM/dd/yyyy'\n        name={name}\n        value={value}\n        onChange={(date) => onChange(convertToDefEventPara(name, date))}\n      ></KeyboardDatePicker>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default DatePicker;\n","import { Button as MuiButton, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(0.5),\n  },\n  label: {\n    textTransform: 'none',\n  },\n}));\n\nconst Button = ({ text, size, color, variant, onClick, ...other }) => {\n  const classes = useStyles();\n  return (\n    <MuiButton\n      variant={variant || 'contained'}\n      color={color || 'primary'}\n      size={size || 'large'}\n      onClick={onClick}\n      {...other}\n      classes={{ root: classes.root, label: classes.label }}\n    >\n      {text}\n    </MuiButton>\n  );\n};\n\nexport default Button;\n","import Input from './Input';\nimport RadioGroup from './RadioGroup';\nimport Select from './Select';\nimport CheckBox from './CheckBox';\nimport DatePicker from './DatePicker';\nimport Button from './Button';\n\nconst Controls = { Input, RadioGroup, Select, CheckBox, DatePicker, Button };\n\nexport default Controls;\n","const KEYS = {\n  employees: 'employees',\n  employeeId: 'employeeId',\n};\nexport const getGenderItems = [\n  { id: 'male', title: 'Male' },\n  { id: 'female', title: 'Female' },\n  { id: 'other', title: 'Other' },\n];\nexport const getDepartmentCollecton = () => [\n  { id: '1', title: 'Development' },\n  { id: '2', title: 'Marketing' },\n  { id: '3', title: 'Accounting' },\n  { id: '4', title: 'HR' },\n];\n\nexport const generateEmployeeId = () => {\n  if (localStorage.getItem(KEYS.employeeId) == null) {\n    localStorage.setItem(KEYS.employeeId, '0');\n  }\n  let id = parseInt(localStorage.getItem(KEYS.employeeId));\n  localStorage.setItem(KEYS.employeeId, (++id).toString());\n  return id;\n};\n\nexport const insertEmployee = (data) => {\n  let employess = getAllEmployees();\n  data.id = generateEmployeeId();\n  employess.push(data);\n  localStorage.setItem(KEYS.employees, JSON.stringify(employess));\n};\n\nexport const getAllEmployees = () => {\n  if (localStorage.getItem(KEYS.employees) == null) {\n    localStorage.setItem(KEYS.employees, JSON.stringify([]));\n  }\n  return JSON.parse(localStorage.getItem(KEYS.employees));\n};\n","import { Grid } from '@material-ui/core';\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from '../../services/employeeService';\n\nconst initialFormValue = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false,\n};\n\nconst EmployeeForm = () => {\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('fullName' in fieldValues) {\n      temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    }\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n        ? ''\n        : 'Email is not valid.';\n    }\n    if ('mobile' in fieldValues) {\n      temp.mobile =\n        fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    }\n    if ('departmentId' in fieldValues) {\n      temp.departmentId = fieldValues.departmentId.length\n        ? ''\n        : 'This field is required.';\n    }\n\n    setErrors({\n      ...temp,\n    });\n    if (fieldValues === values) {\n      return Object.values(temp).every((x) => x === '');\n    }\n  };\n  const { values, handleInputChange, errors, setErrors, resetForm } = useForm(\n    initialFormValue,\n    true,\n    validate\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name='fullName'\n            variant='outlined'\n            label='Full Name'\n            value={values.fullName}\n            onChange={handleInputChange}\n            error={errors.fullName}\n          />\n          <Controls.Input\n            name='email'\n            variant='outlined'\n            label='Email'\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n          <Controls.Input\n            name='mobile'\n            variant='outlined'\n            label='Mobile'\n            value={values.mobile}\n            onChange={handleInputChange}\n            error={errors.mobile}\n          />\n          <Controls.Input\n            name='city'\n            variant='outlined'\n            label='City'\n            value={values.city}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.RadioGroup\n            label='Gender'\n            name='gender'\n            value={values.gender}\n            onChange={handleInputChange}\n            items={employeeService.getGenderItems}\n          />\n          <Controls.Select\n            name='departmentId'\n            label='Department'\n            value={values.departmentId}\n            onChange={handleInputChange}\n            options={employeeService.getDepartmentCollecton()}\n            error={errors.departmentId}\n          />\n          <Controls.DatePicker\n            name='hireDate'\n            label='Hire Date'\n            value={values.hireDate}\n            onChange={handleInputChange}\n          />\n          <Controls.CheckBox\n            name='isPermanent'\n            label='Permanent Employee'\n            value={values.isPermanent}\n            onChange={handleInputChange}\n          />\n          <div>\n            <Controls.Button text='Submit' type='submit' />\n            <Controls.Button text='Reset' color='default' onClick={resetForm} />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n};\n\nexport default EmployeeForm;\n","import { PageHeader } from '../../components';\nimport EmployeeForm from './EmployeeForm';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport { makeStyles, Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n  },\n}));\n\nconst Employees = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <PageHeader\n        title='New Employee'\n        subTitle='Form design wth validation'\n        icon={<PeopleOutlineIcon fontSize='large' />}\n      />\n      <Paper className={classes.pageContent}>\n        <EmployeeForm />\n      </Paper>\n    </>\n  );\n};\n\nexport default Employees;\n","import {\n  createMuiTheme,\n  CssBaseline,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core';\nimport './App.css';\nimport { SideMenu, Header } from './components';\nimport Employees from './pages/Employees/Employees';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#333996',\n      light: '#3c44b126',\n    },\n    secondary: {\n      main: '#f83245',\n      light: '#f8324526',\n    },\n    background: {\n      default: '#f4f5fd',\n    },\n  },\n  // shape: {\n  //   borderRadius: '12px',\n  // },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        transform: 'translateZ(0)',\n      },\n    },\n  },\n  props: {\n    MuiIconButton: {\n      disableRipple: true,\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '320px',\n    width: '100%',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n\n        <Employees />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}